vim.cmd([[ source ~/.vim/shared.vim ]])

local Plug = vim.fn["plug#"]

-- use vim-plug to control plugins
vim.call("plug#begin")

-- Plug 'tpope/vim-fugitive'
Plug("easymotion/vim-easymotion")
-- Plug 'mbbill/undotree'

Plug("lervag/vimtex")
vim.g.tex_flavor = "latex"
vim.g.vimtex_view_method = "general"
vim.g.vimtex_quickfix_mode = 0
vim.g.vimtex_imaps_leader = ";"
-- vim.opt.conceallevel = 1
vim.g.tex_conceal = "abdmg"

Plug("sirver/ultisnips")
vim.g.UltiSnipsExpandTrigger = "<tab>"

Plug("vim-latex/vim-latex")
-- filetype plugin on

-- filetype indent on
-- let g:tex_flavor='latex'

Plug("cpea2506/one_monokai.nvim")
Plug("nvim-treesitter/nvim-treesitter")
Plug("jbyuki/nabla.nvim")
vim.call("plug#end")


require("one_monokai").setup({
	transparent = true,
})

require'nvim-treesitter.configs'.setup {
  -- A list of parser names, or "all" (the five listed parsers should always be installed)
  ensure_installed = { "c", "lua", "vim", "vimdoc", "query", "latex" },

  -- Install parsers synchronously (only applied to `ensure_installed`)
  sync_install = false,

  -- Automatically install missing parsers when entering buffer
  -- Recommendation: set to false if you don't have `tree-sitter` CLI installed locally
  auto_install = true,

  -- List of parsers to ignore installing (for "all")
  ignore_install = { "javascript" },

  ---- If you need to change the installation directory of the parsers (see -> Advanced Setup)
  -- parser_install_dir = "/some/path/to/store/parsers", -- Remember to run vim.opt.runtimepath:append("/some/path/to/store/parsers")!

  highlight = {
    enable = true,

    -- NOTE: these are the names of the parsers and not the filetype. (for example if you want to
    -- disable highlighting for the `tex` filetype, you need to include `latex` in this list as this is
    -- the name of the parser)
    -- list of language that will be disabled
    disable = { "c", "rust" },
    -- Or use a function for more flexibility, e.g. to disable slow treesitter highlight for large files
    disable = function(lang, buf)
        local max_filesize = 100 * 1024 -- 100 KB
        local ok, stats = pcall(vim.loop.fs_stat, vim.api.nvim_buf_get_name(buf))
        if ok and stats and stats.size > max_filesize then
            return true
        end
    end,

    -- Setting this to true will run `:h syntax` and tree-sitter at the same time.
    -- Set this to `true` if you depend on 'syntax' being enabled (like for indentation).
    -- Using this option may slow down your editor, and you may see some duplicate highlights.
    -- Instead of true it can also be a list of languages
    additional_vim_regex_highlighting = false,
  },
}

require"nabla".enable_virt({
  autogen = true, -- auto-regenerate ASCII art when exiting insert mode
  silent = true,     -- silents error messages
})
